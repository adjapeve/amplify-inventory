import React from "react";
import { Button, TextField, InputAdornment, Grid } from "@mui/material";
import { Send } from "@mui/icons-material";
const Form = ({
  formData,
  updateForm,
  editProduct,
  addProduct,
  updateInput,
  initialState,
}) => {
  const handleUpdateForm = (value) => {
    updateForm(value);
  };
  const handleUpdateInput = (key, value) => {
    updateInput(key, value);
  };
  return (
    <form onSubmit={formData.id ? editProduct : addProduct}>
      <Grid container spacing={1} sx={{ marginBottom: 2 }}>
        <Grid item xs={12} sm={6} lg={4}>
          <TextField
            type="text"
            id="name"
            label="Name"
            margin="dense"
            required
            onChange={(event) => handleUpdateInput("name", event.target.value)}
            value={formData.name}
          />
        </Grid>
        <Grid item xs={12} sm={6} lg={4}>
          <TextField
            type="text"
            id="description"
            label="Description"
            margin="dense"
            required
            onChange={(event) =>
              handleUpdateInput("description", event.target.value)
            }
            value={formData.description}
          />
        </Grid>
        <Grid item xs={12} sm={6} lg={4}>
          <TextField
            type="number"
            id="price"
            label="Price"
            margin="dense"
            InputProps={{
              startAdornment: (
                <InputAdornment position="start">$</InputAdornment>
              ),
            }}
            required
            onChange={(event) => handleUpdateInput("price", event.target.value)}
            value={formData.price}
          />
        </Grid>
        <Grid item xs={12} sm={6} lg={4}>
          <TextField
            type="text"
            id="size"
            label="Size"
            margin="dense"
            onChange={(event) => handleUpdateInput("size", event.target.value)}
            value={formData.size}
          />
        </Grid>
        <Grid item xs={12} sm={6} lg={4}>
          <TextField
            type="text"
            id="color"
            label="Color"
            margin="dense"
            onChange={(event) => handleUpdateInput("color", event.target.value)}
            value={formData.color}
          />
        </Grid>
        <Grid item xs={12} sm={6} lg={4}>
          {/* the field id is only included in formData when editing a product as it is the main key and it is populated from the database.
            It is not needed when creating a new product as it is generated by the DB. */}
          <Button
            variant="contained"
            size="small"
            type="submit"
            endIcon={<Send />}
            sx={{ margin: 1 }}
          >
            {formData.id ? "Edit Product" : "Add product"}
          </Button>
          <Button
            size="small"
            variant="outlined"
            type="button"
            onClick={() => handleUpdateForm(initialState)}
          >
            Clear
          </Button>
        </Grid>
      </Grid>
    </form>
  );
};
export default Form;
